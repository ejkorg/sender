flowchart LR
  %% User entry point
  subgraph User
    Browser["Browser / Angular SPA"]
  end

  subgraph Frontend
    StepperUI["Angular Stepper Component"]
  end

  Browser --> StepperUI

  %% REST surface
  StepperUI -->|"Preview payloads\nGET /api/senders/{id}/discover/preview"| SenderController
  StepperUI -->|"Stage payloads\nPOST /api/senders/{id}/stage"| SenderController
  StepperUI -->|"Stage metrics & records\nGET /api/stage/**"| StageController

  %% Backend application
  subgraph Backend
    SenderController["SenderController"]
    StageController["StageController"]
    MetadataImporterService["MetadataImporterService"]
    RefDbService["RefDbService"]
    SenderDispatchService["SenderDispatchService"]
    ExternalMetadataRepo["ExternalMetadataRepository"]
    SenderQueueRepo["SenderQueueRepository"]
  end

  SenderController --> MetadataImporterService
  SenderController --> RefDbService
  StageController --> RefDbService
  RefDbService --> SenderDispatchService
  MetadataImporterService --> ExternalMetadataRepo
  SenderDispatchService --> SenderQueueRepo

  %% Data stores and integrations
  subgraph Datastores
    ExternalDBs[("External source DBs\n(dbconnections.json)")]
    RefDB[("RefDB Oracle Staging")]
    AppDB[("Application DB\nsender_queue & metadata")]
  end

  MetadataImporterService -->|"Fetch discovery preview"| ExternalDBs
  RefDbService -->|"Stage payload metadata"| RefDB
  StageController -->|"List staged payloads"| RefDB
  SenderDispatchService -->|"Enqueue staged payloads"| AppDB

  %% Optional dispatch trigger
  StepperUI -. "Dispatch toggle" .-> SenderDispatchService

  %% Visual styles
  classDef infra fill:#f9f,stroke:#333,stroke-width:1px;
  class ExternalDBs,RefDB,AppDB infra

  style Backend fill:#f2f8ff,stroke:#0366d6
  style Frontend fill:#fff4e6,stroke:#d97706
  style Datastores fill:#f3f4f6
