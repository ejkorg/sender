%% Level-1 Data Flow Diagram (Mermaid)
%% Entities: User, Frontend, Backend (Stage, Enqueue, Dispatch), Ref DB, DTP DB
flowchart TD
  User[User]
  Browser[Browser / Angular]
  Frontend[Frontend Stepper]

  subgraph Backend[Backend Services]
    StageAPI[/api/stage]\n(StageController)
    SenderAPI[/api/sender]\n(SenderController)
    DispatchSvc[SenderDispatchService]
    SenderSvc[SenderService]
    RefDbSvc[RefDbService]
  end

  RefDB[(Ref DB) - staged records]
  DTPDB[(DTP DB) - sender queue)]

  %% user -> frontend -> stage
  User --> Browser
  Browser --> Frontend
  Frontend -->|1. preview discover| StageAPI
  StageAPI -->|returns staged rows| Frontend

  %% staging -> enqueue
  Frontend -->|2. stage selected rows| SenderAPI
  SenderAPI -->|3. enqueue payloads (insert NEW)| RefDbSvc
  RefDbSvc --> RefDB

  %% queue processing
  SenderSvc -->|scheduled or manual| RefDbSvc
  RefDbSvc -->|fetch NEW| RefDB
  SenderSvc -->|mark SENT/FAILED| RefDB

  %% dispatch to external DTP
  DispatchSvc -->|scheduled| RefDbSvc
  RefDbSvc -->|fetch staged| RefDB
  DispatchSvc -->|push via JDBC inserts| DTPDB
  DispatchSvc -->|on success mark enqueued| RefDbSvc
  RefDbSvc --> RefDB

  %% monitoring
  Frontend -->|monitor poll| StageAPI
  StageAPI --> Frontend

  classDef db fill:#fef3c7,stroke:#b58900;
  class RefDB,DTPDB db;
flowchart LR
  %% Level 1 DFD: Enqueue -> Queue -> Processing
  User["User / Frontend"]
  API["SenderController (handles POST /enqueue)"]
  DB[("App DB - sender_queue table")]
  Scheduler["DiscoveryScheduler"]
  Processor["SenderService.processQueueEntry()"]
  ExternalDBs[("External Data Sources")]
  Mail["MailService / SMTP"]

  User -->|"enqueue form"| API
  API -->|"validate & persist EnqueueRequest"| DB
  DB -->|"new SenderQueueEntry row"| Scheduler
  Scheduler -->|"fetch batch"| Processor
  Processor -->|"lookup metadata from external DBs"| ExternalDBs
  Processor -->|"update status in DB"| DB
  Processor -->|"send notifications"| Mail

  classDef datastore fill:#f0f9ff,stroke:#0284c7
  class DB,ExternalDBs datastore

  subgraph Notes
    N1["Queue rows are SenderQueueEntry entity"]
    N2["Metadata rows stored via ExternalMetadataRepository/JdbcExternalMetadataRepository"]
  end
